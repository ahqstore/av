name: Run Bot

on:
  issue_comment:

jobs:
  startup:
    name: Initial Check

    runs-on: ubuntu-latest

    outputs:
      shouldRun: ${{ fromJson(steps.run.outputs.result) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: If checks should run
        uses: actions/github-script@v8
        id: run
        with:
          script: |
            const body = context.payload.issue.body;

            console.log(context.payload.issue);

            return body.startsWith("/store set ")

  mobsf:
    needs: [startup]

    name: Scan using MobSF (Android)

    runs-on: ubuntu-latest

    if: needs.startup.outputs.shouldRun

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install & Run
        continue-on-error: true
        run: |
          npm i -g pnpm

          cd av 
          pnpm install
          cd ..

          # Fetch the docker image
          docker pull opensecurity/mobile-security-framework-mobsf:latest

          # Run & Forget about it
          docker run --rm -p 8000:8000 opensecurity/mobile-security-framework-mobsf:latest & true

          sleep 45

          # Get the av key
          node av/getApiKey.js

          data=$(cat ./token)
          echo "Found key: $data"

          # Finally run the av to upload
          node av/upload.mjs

          # Scan
          node av/scan.mjs

      - name: Upload
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          path: |
            ./android-alldata.json
            ./android-appsec.json
          name: android

  win32:
    needs: [startup]

    name: Scan using Windows Defender

    runs-on: windows-latest

    if: needs.startup.outputs.shouldRun

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Run
        shell: pwsh
        continue-on-error: true
        run: |
          Remove-MpPreference -ExclusionPath (Get-MpPreference).ExclusionPath
          Set-Service -Name wuauserv -StartupType Manual -Status Running

          C:\"Program Files\Windows Defender\MpCmdRun.exe" -SignatureUpdate

          node av/win32.js

      - name: Upload
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          path: ./report.json
          name: win32

  clamav:
    needs: [startup]

    name: Scan using ClamAV (Linux mainly)

    runs-on: ubuntu-latest

    if: needs.startup.outputs.shouldRun

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Start ClamAV daemon clamd
        uses: toblux/start-clamd-github-action@v0.2.1
        with: # Custom inputs are optional (these are the default values)
          unix_socket: /tmp/clamd.socket
          tcp_port: 3310
          stream_max_length: 1M

      - name: Ping clamd on TCP port 3310
        run: echo PING | nc localhost 3310

      - name: Ping clamd using the Unix socket
        run: echo PING | nc -U /tmp/clamd.socket

      - name: Write GitHub event to file
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            fs.writeFileSync("./event.json", JSON.stringify(context.payload));

      - name: Installing Dependencies and run bot
        continue-on-error: true
        run: |
          sudo systemctl stop clamav-freshclam.service
          sudo freshclam || true
          sudo systemctl start clamav-freshclam.service

          sudo /etc/init.d/clamav-daemon start

          npm i -g pnpm

          cd av
          pnpm install
          cd ..

          node av/clamav.js

      - name: Upload
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          path: ./report.json
          name: linux

  runbot:
    name: Run the Issues Bot
    needs: [startup, clamav, mobsf, win32]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download artifacts
        uses: actions/download-artifact@v5
        continue-on-error: true
        with:
          path: reports
          merge-multiple: false

      - name: List
        run: ls -R reports/
