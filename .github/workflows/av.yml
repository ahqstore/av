name: Publish

on:
  push:
  issue_comment:

jobs:
  mobsf:
    name: Run MobSF (Android)

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install & Run
        run: |
          npm i -g pnpm

          cd api 
          pnpm install
          cd ..

          # Fetch the docker image
          docker pull opensecurity/mobile-security-framework-mobsf:latest

          # Run & Forget about it
          docker run --rm -p 8000:8000 opensecurity/mobile-security-framework-mobsf:latest & true

          sleep 20

          # Get the api key
          node api/getApiKey.js

          data=$(cat ./token)
          echo "Found key: $data"

          # Finally run the api to upload
          node api/upload.mjs

          # Scan
          node api/scan.mjs

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          path: ./android-alldata.json
          name: android-alldata.json

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          path: ./android-appsec.json
          name: android-appsec.json

  win32:
    name: Scan using Windows Defender (${{ matrix.arch }})

    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
            arch: x64
          - os: windows-latest-arm
            arch: arm64

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Run
        shell: pwsh
        run: |
          Remove-MpPreference -ExclusionPath (Get-MpPreference).ExclusionPath
          Set-Service -Name wuauserv -StartupType Manual -Status Running

          C:\"Program Files\Windows Defender\MpCmdRun.exe" -SignatureUpdate

          npm i -g pnpm

          cd api
          pnpm install
          cd ..

          node api/win32.js

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          path: ./win32report.json
          name: win32report-${{ matrix.arch }}.json

  clamav:
    name: Run ClamAV (Linux mainly)

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Start ClamAV daemon clamd
        uses: toblux/start-clamd-github-action@v0.2.1
        with: # Custom inputs are optional (these are the default values)
          unix_socket: /tmp/clamd.socket
          tcp_port: 3310
          stream_max_length: 1M

      - name: Ping clamd on TCP port 3310
        run: echo PING | nc localhost 3310

      - name: Ping clamd using the Unix socket
        run: echo PING | nc -U /tmp/clamd.socket

      - name: Write GitHub event to file
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            fs.writeFileSync("./event.json", JSON.stringify(context.payload));

      - name: Installing Dependencies and run bot
        run: |
          sudo systemctl stop clamav-freshclam.service
          sudo freshclam || true
          sudo systemctl start clamav-freshclam.service

          sudo /etc/init.d/clamav-daemon start

          npm i -g pnpm

          cd api
          pnpm install
          cd ..

          node api/issue.js

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          path: ./clamav.json
          name: clamav.json
